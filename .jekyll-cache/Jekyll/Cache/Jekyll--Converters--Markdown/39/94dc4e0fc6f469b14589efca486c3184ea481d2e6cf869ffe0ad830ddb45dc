I"R<h4 id="1-kvm-host-준비">1)	KVM host 준비</h4>

<p>https://myenterpriselicense.hpe.com/ 에서 ISO image와 임시 license를 다운로드 받습니다.   이 자료는 HPE_VM_Essentials_SW_image_v8.0.1.1_S5Q83-11001.iso 버전 기준입니다.  ISO 파일을 mount 하면</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># mount -o loop /root/HPE_VM_Essentials_SW_image_v8.0.1.1_S5Q83-11001.iso /mnt
</code></pre></div></div>

<p>핵심이 되는 두개의 파일이 있습니다.</p>

<p>hpe-vm_1.0.2-1_amd64.deb<br />
hpe-vme-8.0.1-1.qcow2.gz</p>

<p>첫번째는 host를 위한 package를 포함하고 두번째는 가상 disk로 HPE VM console를 구성할 때 사용합니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># apt install -f /mnt/hpe-vm_1.0.2-1_amd64.deb
</code></pre></div></div>

<p>추가로 multipath-tools과 curl로 필요해서 설치합니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># apt install curl
# apt install multipath-tools
</code></pre></div></div>

<p>HPE VM console는 “mgmt”라는 이름의 Open vswitch bridge가 필요해서 아래와 같이 만듭니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># ovs-vsctl add-br mgmt
# ovs-vsctl add-port mgmt ens2f0
</code></pre></div></div>

<p>ens2f0는 host에서 VM 관리를 위해 할당한 network interface입니다.  여기서는 VM 관리만을 위한 network interface만 다릅니다. 데이터 혹은 서비스를 위한 network interface는  KVM 차원에서 별도로 추가할 수 있습니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># ip addr flush dev ens2f0
# ip addr add 192.168.128.192/24 dev mgmt
# ip link set mgmt up
</code></pre></div></div>

<p>IP를 부여해서 통신에 문제가 없으면 아래 내용으로 /etc/netplan/01-network-manager-all.yaml 파일을 만듭니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>network:
  version: 2
  ethernets:
    ens2f0:
      dhcp4: no
bridges:
    mgmt:
      openvswitch: {}
      dhcp4: false
      addresses: [192.168.1.152/24]
      gateway4: 192.168.1.1
      nameservers:
        addresses: [203.248.252.2]
</code></pre></div></div>

<h4 id="2-hpv-vm-console-설치">2)	HPV VM console 설치</h4>

<p>ISO에 들어 있던 hpe-vme-8.0.1-1.qcow2.gz 는 압축을 풀어 /root에 미리 옮겨 놓습니다. 그리고/opt/hpe-vm/bin/hpe-vm를 실행해서 console를 구성합니다. <Install Morpheus="">에 들어가서 빈칸을 채우고 <Install>를 선택합니다.  Image URI는 file:///root/hpe-vme-8.0.1-1.qcow2 입니다.</Install></Install></p>

<p><img src="/assets/figs/240107_fig1.png" alt="Image Alt fig1" /></p>

<p>93% 상태가 약 수 분간 지속되다가 완료합니다.  아래 화면이 나오면  HPE VM console를 위한 KVM guest 생성은 성공적으로 마친 상태입니다.</p>

<p><img src="/assets/figs/240107_fig2.png" alt="Image Alt fig1" /></p>

<h4 id="3-hpe-vm-console-구성-및-사용법">3)	HPE VM console 구성 및 사용법</h4>

<p>처음 console을 접속하면 ID를 만드는 과정을 거치고 마지막에 license까지 입력을 하면 아래와 같은 대시보드를 만날 수 있습니다.</p>

<p><img src="/assets/figs/240107_fig3.png" alt="Image Alt fig1" /></p>

<p>HPE VM console는 morpheus라는 기존 CMP(Cloud Management Platform) tool을 단순화시켜 만들었습니다.  원래 morpheus는 VMware, KVM 뿐만 아니라 public cloud Azure, Google Cloud 등도 지원하지만 HPE VM는 VMware와 Ubuntu KVM만 지원할 수 있도록 했습니다. 그래도 기본 디자인은 원본 morpheus와 동일하고 사용법도 거의 동일합니다. morpheus에는 수천개의 인스턴스를 효율적으로 관리하기 위하여 인스턴스 이전에 그룹, 클라우드, 클러스터라는 단계가 존재합니다. VMware의 ESXi 호스트 클라이언트에 접속하면 바로 가상 시스템을 만들 수 있는 반면에 morpheus는 그룹, 클라우드, 클러스터를 구성해야 다음에 가상 시스템인 인스턴스를 만들 수 있습니다.</p>

<p>먼저 인프라 -&gt; 그룹 -&gt; “+생성”를 통해서 그룹을 만들어야 하고</p>

<p><img src="/assets/figs/240107_fig4.png" alt="Image Alt fig1" /></p>

<p>다시 인프라 -&gt; 클라우드 -&gt; “+추가”를 통해 클라우드를 추가합니다.</p>

<p><img src="/assets/figs/240107_fig5.png" alt="Image Alt fig1" /></p>

<p>그리고 인프라 -&gt; 클러스터 -&gt; “+클러스터 추가”를 거쳐서 KVM host 하나를 아래와 같이 등록합니다.</p>

<p><img src="/assets/figs/240107_fig6.png" alt="Image Alt fig1" /></p>

<p>진행 과정과 에러는 “이력” tab에 나옵니다.  에러 전체 메시지는 VM console 에 있는 파일</p>

<p>/var/log/morpheus/morpheus-ui/current</p>

<p>혹은  해당 KVM host 서버의 파일에 기록합니다.</p>

<p>/var/log/morpheus-node/morphd/current</p>

<p>클러스터에 추가로 HOST를 등록하려면 클러스터 화면에서 액션 -&gt; “Add HPE VM Hypervisor”를 이용합니다.</p>

<p>그룹, 클라우드, 클러스터, KVM host 그리고 인스턴스 순으로 계층 구조가 있는 셈입니다.  참고로VMware의 경우 VCenter를 클라우드에 등록하면  KVM과 달리 클러스터는 등록할 필요가 없습니다. VCenter가 클러스터를 대신한다는 개념입니다.</p>

<p>인스턴스는 프로비저닝 -&gt; 인스턴스 -&gt; “+추가” 순입니다. 여기에 상위 계층에 있는 그룹, 클라우드를 선택하고 인스턴스 이름을 먼저 정합니다.</p>

<p><img src="/assets/figs/240107_fig7.png" alt="Image Alt fig1" /></p>

<p>클라우드 아래에 있는 클러스터를 “리소스 풀”에서 결정하고 호스트까지 선택할 수 있습니다.</p>

<p><img src="/assets/figs/240107_fig8.png" alt="Image Alt fig1" /></p>

<p>네트워크는 모피어스를 host를 클러스터에 추가하는 과정에서 “mgmt” bridge를 기반으로 하는 “Management” 이름의 network를 자동적으로 만들어 주는데 이 Management를 그대로 사용합니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># virsh net-list
 Name         State    Autostart   Persistent
-----------------------------------------------
 Management   active   yes         yes
</code></pre></div></div>

<p>이미지는 라이브러리 -&gt; 가상 이미지 메뉴를 통해 ISO 파일을 미리 올려 놓습니다.</p>

<p><img src="/assets/figs/240107_fig9.png" alt="Image Alt fig1" /></p>

<p>Morpheus는 태스크를 통해 인스턴스에 대해 추가 자동화가 가능합니다. 에를 들어 NIC를 추가하는 script를 만들어 태스크에 등록해 놓고 이 태스크를 지정하면 인스턴스 완성 후에 NIC가 추가됩니다.</p>

<p>완성된 인스턴스는 인프라-&gt;컴퓨트-&gt;가상머신 탭에서 확인할 수 있습니다. 혹시 생성 과정에 문제가 있는 경우는 해당 인스턴스의 이력 탭에서 에러 내용을 볼 수 있습니다.</p>

<p><img src="/assets/figs/240107_fig10.png" alt="Image Alt fig1" /></p>

:ET